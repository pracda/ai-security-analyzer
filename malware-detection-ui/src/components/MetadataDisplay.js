import React, { useState } from 'react';
import axios from 'axios';

const MetadataDisplay = ({ s3Key }) => {
    const [metadata, setMetadata] = useState(null);
    const [insights, setInsights] = useState('');
    const [scanResults, setScanResults] = useState(null);
    const [analysisId, setAnalysisId] = useState(null); // Store the VirusTotal analysis ID

    const fetchMetadata = async () => {
        if (!s3Key) {
            alert("File key is missing. Please upload a file first.");
            return;
        }

        try {
            const filePath = `${s3Key}`; // Make sure this path is correct
            console.log("Sending filePath:", filePath); // Debugging output
            const response = await axios.post('http://localhost:3000/metadata', { filePath });
            setMetadata(response.data.metadata);
        } catch (error) {
            console.error("Error fetching metadata:", error);
            alert("Failed to fetch metadata.");
        }
    };

    const fetchBedrockInsights = async () => {
        try {
            const response = await axios.post('http://localhost:3000/bedrock/analyze', { metadata });
            setInsights(response.data.insights);
            console.log('Bedrock insights:', response.data.insights);
        } catch (error) {
            console.error('Error fetching Bedrock insights:', error);
            alert('Failed to fetch Bedrock insights.');
        }
    };

    const fetchVirusTotalScan = async () => {
        try {
            const response = await axios.post('http://localhost:3000/virustotal/virustotal-scan', { metadata });
            setScanResults(response.data.scanResults);
            console.log('VirusTotal scan results:', response.data.scanResults);
        } catch (error) {
            console.error('Error fetching VirusTotal scan results:', error);

            if (error.response && error.response.status === 404) {
                alert('File not found in VirusTotal database. Upload the file first.');
            } else {
                alert('Failed to fetch VirusTotal scan results.');
            }
        }
    };

    const uploadFileToVirusTotal = async () => {
        if (!metadata || !metadata.filePath) {
            alert("File metadata is missing. Please fetch metadata first.");
            return;
        }

        try {
            const response = await axios.post('http://localhost:3000/virustotal/upload-file', {
                filePath: metadata.filePath, // Use the file path from metadata
            });

            console.log('File uploaded to VirusTotal:', response.data.uploadResults);
            setAnalysisId(response.data.uploadResults.data.id); // Store the analysis ID
            alert('File uploaded to VirusTotal. Check scan results later.');
        } catch (error) {
            console.error('Error uploading file to VirusTotal:', error);
            alert('Failed to upload file to VirusTotal.');
        }
    };

    const checkScanResults = async () => {
        if (!analysisId) {
            alert("Analysis ID is missing. Please upload the file first.");
            return;
        }

        try {
            const response = await axios.get(`http://localhost:3000/virustotal/check-scan/${analysisId}`);
            setScanResults(response.data.scanResults);
            console.log('VirusTotal scan results:', response.data.scanResults);
            alert('Scan results fetched successfully.');
        } catch (error) {
            console.error('Error fetching scan results:', error);
            alert('Failed to fetch scan results.');
        }
    };

    return (
        <div>
            <h2>File Metadata</h2>
            <button onClick={fetchMetadata}>Get Metadata</button>
            {metadata && (
                <div>
                    <h3>Metadata:</h3>
                    <pre>{JSON.stringify(metadata, null, 2)}</pre>

                    <button onClick={fetchBedrockInsights}>Get Bedrock Insights</button>
                    <button onClick={fetchVirusTotalScan}>Get VirusTotal Scan</button>
                    <button onClick={uploadFileToVirusTotal}>Upload File to VirusTotal</button>
                    <button onClick={checkScanResults}>Check Scan Results</button>

                    {insights && (
                        <div>
                            <h3>Bedrock Insights:</h3>
                            <pre>{insights}</pre>
                        </div>
                    )}

                    {scanResults && (
                        <div>
                            <h3>VirusTotal Scan Results:</h3>
                            <pre>{JSON.stringify(scanResults, null, 2)}</pre>
                        </div>
                    )}
                </div>
            )}
        </div>
    );
};

export default MetadataDisplay;